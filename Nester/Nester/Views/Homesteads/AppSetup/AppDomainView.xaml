<?xml version="1.0" encoding="utf-8" ?>
<views:View xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:views="clr-namespace:Nester.Views;assembly=Nester"
             xmlns:validators="clr-namespace:Nester.Utils.Validators;assembly=Nester"
             xmlns:utils="clr-namespace:Nester.Utils;assembly=Nester"
             xmlns:sync="clr-namespace:Syncfusion.ListView.XForms;assembly=Syncfusion.SfListView.XForms"
             Title="Domains"                          
             x:Class="Nester.Views.AppDomainView">
 
  <ContentPage.Resources>
    <ResourceDictionary>
      <utils:InverseBoolConverter x:Key="inverseBoolConverter" />
      <utils:IdentifierMaker x:Key="identityConverter"/>
      <utils:BoolToDomainStatusConverter x:Key="domainStatusConverter"/>
      <utils:ObjectToBoolConverter x:Key="objectBoolConverter"/>
      <DataTemplate x:Key="ItemTemplate" x:Name="ItemTemplate">

        <ViewCell>
          <ViewCell.View>

            <Grid Padding="5,5,5,5" VerticalOptions="Center"
                    RowSpacing="6" ColumnSpacing="0">
              
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="1" />
              </Grid.RowDefinitions>

              <Grid>
                
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="64" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Image Source="{Binding Icon}"
                    Grid.RowSpan="2"
                    HeightRequest="32"
                    WidthRequest="32"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"/>

                <Label Text="{Binding Name}"
                    Style="{StaticResource nesterFieldLabel}" 
                    Grid.Row="0"
                    Grid.Column="1"
                    HorizontalOptions="Start" />
                <Label x:Name="ListTag"
                    Text="{Binding Tag}"
                    Style="{StaticResource nesterListInfoLabelMinor}"
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalOptions="Start" />

                <Grid Grid.RowSpan="2"
                    Grid.Column="2"
                    HorizontalOptions="End">
                  
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>

                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="30*" />
                  </Grid.ColumnDefinitions>

                  <!--<Button Text="Certificate"
                        Grid.Row="0" Grid.Column="0"
                        Style="{StaticResource buttonListInline}"
                        BindingContext="{Binding Source={x:Reference AppDomainsList}, Path=BindingContext}"
                        Command="{Binding EditCertCommand}"
                        CommandParameter="{Binding Source={x:Reference Name}, Path=BindingContext}"
                            />-->
                </Grid>
                
              </Grid>
             
              <Frame Grid.Row="1" OutlineColor="#E4E4E4" HasShadow="True" HeightRequest="1"/>
            </Grid>

          </ViewCell.View>
        </ViewCell>
            
      </DataTemplate>
    </ResourceDictionary>  
  </ContentPage.Resources>
  
  <StackLayout>

    <Grid>
      
      <!--Main Page (level 1)-->
      <Grid.RowDefinitions>
        <RowDefinition Height="5*"/>
        <RowDefinition Height="40*"/>
        <RowDefinition Height="40*"/>
        <RowDefinition Height="20"/>        
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="5*"/>
      </Grid.RowDefinitions>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="20*"/>
        <ColumnDefinition Width="60*"/>
        <ColumnDefinition Width="20*"/>
      </Grid.ColumnDefinitions>

      <StackLayout Grid.Row="0" Grid.Column="1" Opacity="{Binding WizardMode, Converter={StaticResource inverseBoolConverter}}"
         Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Start">

        <Button x:Name="ButtonHome"
          Text="Home"
          Style="{StaticResource buttonUtilStyle1}"
          Clicked="OnDoneButtonClickedAsync">
        </Button>

        <Button x:Name="ButtonBasicDetails"
          Text="Basic"
          Style="{StaticResource buttonUtilStyle1}"
          Clicked="OnButtonBasicDetailsClickedAsync">
        </Button>

        <Button x:Name="ButtonNests"
          IsVisible="{Binding EditApp.OwnerCapabilities.CanViewNest}"
          Text="Nests"
          Style="{StaticResource buttonUtilStyle1}"
          Clicked="OnButtonNestsClickedAsync">
        </Button>

        <Button x:Name="ButtonContacts"
          Text="Domains"
          Style="{StaticResource buttonUtilStyle1}"
          Clicked="OnButtonContactsClickedAsync">
        </Button>

      </StackLayout>

      <StackLayout Grid.Row="1" Grid.Column="1" >
        
        <!--Parent/child (level 2)-->        
        <StackLayout>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>          
          </Grid.RowDefinitions>                    
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="30*"/>
          </Grid.ColumnDefinitions>
          
          <!--Tag-->
          <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Vertical">
            
            <Label Style="{StaticResource nesterFieldLabel}"
                Text="Tag"></Label>
            <Entry Style="{StaticResource nesterField}"
                  x:Name="Tag"
                  Text="{
                    Binding Path=EditDomain.Tag, 
                    Mode=TwoWay,
                    Converter={StaticResource identityConverter},
                    ConverterParameter=16
                    }"
                  Keyboard="Keyboard.Text"
                  VerticalOptions="LayoutOptions.CenterAndExpand"
                  Placeholder="Enter an identifier">
              <Entry.Behaviors>
                <validators:EntryValidatorBehavior
                    IsCheckEmpty="True"
                    MaxLength="16"
                    PropertyChanged="OnFieldValidation"
                    x:Name="TagValidator" />
              </Entry.Behaviors>
            </Entry>
            <Label Style="{StaticResource validateFailMsg}"
                  Text="{Binding Source={x:Reference TagValidator}, Path=Message}"
                  Opacity="{Binding Source={x:Reference TagValidator}, Path=IsVisibleMessage}" />
            
          </StackLayout>

          <!--Name-->
          <StackLayout Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Vertical">
              
              <Label Style="{StaticResource nesterFieldLabel}"
                    Text="Name"></Label>
              <Entry Style="{StaticResource nesterField}"
                x:Name="Name"
                Text="{Binding Path=EditDomain.Name, Mode=TwoWay}"
                Keyboard="Keyboard.Text"
                VerticalOptions="LayoutOptions.CenterAndExpand"
                Placeholder="Enter a name">
                <Entry.Behaviors>
                  <validators:EntryValidatorBehavior
                      IsCheckEmpty="True"
                      MaxLength="255"
                      PropertyChanged="OnFieldValidation"
                      x:Name="NameValidator" />
                </Entry.Behaviors>
              </Entry>
              <Label Style="{StaticResource validateFailMsg}"
                  Text="{Binding Source={x:Reference NameValidator}, Path=Message}"
                  Opacity="{Binding Source={x:Reference NameValidator}, Path=IsVisibleMessage}" />
          
          </StackLayout>
          
          <!--Primary-->
          <StackLayout Grid.Row="1" Grid.Column="0" Orientation="Vertical">
            <Label Style="{StaticResource nesterFieldLabel}" Text="Primary Domain" HorizontalOptions="StartAndExpand" />
            <Switch x:Name="IsPrimary" IsToggled="{Binding Path=EditDomain.Primary, Mode=TwoWay}" HorizontalOptions="Center"  />
          </StackLayout>
          
          <!--Name-->
          <StackLayout Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Vertical">

              <Label Style="{StaticResource nesterFieldLabel}"
                    Text="Aliases"></Label>
              <Entry Style="{StaticResource nesterField}"
                x:Name="Aliases"
                Text="{Binding Path=EditDomain.Aliases, Mode=TwoWay}"
                Keyboard="Keyboard.Text"
                VerticalOptions="LayoutOptions.CenterAndExpand"
                Placeholder="Enter a list of domain aliases">
                <Entry.Behaviors>
                  <validators:EntryValidatorBehavior
                      IsCheckEmpty="False"
                      MinLength="0"
                      MaxLength="255"                      
                      PropertyChanged="OnFieldValidation"
                      x:Name="AliasesValidator" />
                </Entry.Behaviors>
              </Entry>
              <Label Style="{StaticResource validateFailMsg}"
                  Text="{Binding Source={x:Reference AliasesValidator}, Path=Message}"
                  Opacity="{Binding Source={x:Reference AliasesValidator}, Path=IsVisibleMessage}" />

          </StackLayout>

        </Grid>          
        </StackLayout>

        <!--IsEnabled="{Binding Source={x:Reference AppDomainsList}, 
                        Path=SelectedItem,
                        Converter={StaticResource objectBoolConverter}}"-->

        <StackLayout Orientation="Horizontal">
          
          <StackLayout Orientation="Horizontal" HorizontalOptions="Start" VerticalOptions="Center">
              <Button x:Name="ButtonClear"
                HorizontalOptions="Start"             
                Text="Clear"
                Style="{StaticResource buttonUtilStyle1}"
                Clicked="OnClearButtonClicked">
              </Button>
          
            <Button x:Name="ButtonAdd"
              HorizontalOptions="Start"
              Text="Add"
              IsEnabled="{Binding Validated, Mode=TwoWay}"
              Style="{StaticResource buttonUtilStyle1}"
              Clicked="OnAddButtonClickedAsync">
            </Button>

            <Button x:Name="ButtonRefresh"
              Text="Refresh"
              IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
              Style="{StaticResource buttonUtilStyle1}"
              Clicked="OnRefreshButtonClickedAsync">
            </Button>

            <Button x:Name="ButtonUpdate"
              Text="Update"                  
              IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
              Style="{StaticResource buttonUtilStyle1}"
              Clicked="OnUpdateButtonClickedAsync">
            </Button>
                    
            <Button x:Name="ButtonRemove"
              Text="Remove"
              IsEnabled="{Binding Source={x:Reference AppDomainsList},
                          Path=SelectedItem,
                          Converter={StaticResource objectBoolConverter}}"
              Style="{StaticResource buttonUtilStyle1}"
              Clicked="OnRemoveButtonClickedAsync">
            </Button>
            
          </StackLayout>
          <StackLayout HorizontalOptions="CenterAndExpand"></StackLayout>
          <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Center">

            <Button x:Name="ButtonCert"
                    Text="Certificate"
                    IsEnabled="{Binding CanUpdate , Mode=TwoWay}"
                    Style="{StaticResource buttonUtilStyle2}">
            </Button>

          </StackLayout>

        </StackLayout>
                
      </StackLayout>
    
      <StackLayout Grid.Row="2" Grid.Column="1">

        <sync:SfListView x:Name="AppDomainsList" 
                        ItemsSource="{Binding Domains}"
                        SelectionGesture="Tap"
                        SelectionMode="Single"
                        SelectionBackgroundColor="{StaticResource selectionColor}"     
                        ItemTemplate="{StaticResource ItemTemplate}"
                        ItemSize="80"
                  >
        </sync:SfListView>

      </StackLayout>

      <ActivityIndicator Grid.Row="2" Grid.Column="1" x:Name="ServiceActive" Style="{StaticResource nesterActive}">
      </ActivityIndicator>
      
      <StackLayout Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
        <Button x:Name="ButtonDone"
                Text="Proceed"
                IsVisible="{Binding WizardMode}" 
                Style="{StaticResource buttonPageFlow}"
                Clicked="OnDoneButtonClickedAsync">
        </Button>
      </StackLayout>

    </Grid>

  </StackLayout>

</views:View>


