<?xml version="1.0" encoding="utf-8" ?>
<views:View xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:views="clr-namespace:Nester.Views;assembly=Nester"
             xmlns:validators="clr-namespace:Nester.Utils.Validators;assembly=Nester"
             xmlns:utils="clr-namespace:Nester.Utils;assembly=Nester"
             xmlns:sync="clr-namespace:Syncfusion.ListView.XForms;assembly=Syncfusion.SfListView.XForms"
             Title="Contacts"                          
             x:Class="Nester.Views.ContactsView">

  <ContentPage.Resources>
    <ResourceDictionary>
      <Style x:Key="PermClassLabel" TargetType="Label">
        <Setter Property="Margin" Value="0,6,0,0" />        
        <Setter Property="TextColor" Value="{StaticResource noteColor}" />
        <Setter Property="VerticalOptions" Value="FillAndExpand" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="FontSize" Value="12" />
      </Style>
      <Style x:Key="PermAttrLabel" TargetType="Label">
        <Setter Property="TextColor" Value="{StaticResource minorColor}" />
        <Setter Property="VerticalOptions" Value="FillAndExpand" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="FontSize" Value="12" />
      </Style>

      <Style x:Key="PermHolder" TargetType="StackLayout">
        <Setter Property="Spacing" Value="0" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="VerticalOptions" Value="FillAndExpand" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
      </Style>  
      <Style x:Key="PermSwitch" TargetType="Switch">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Scale" Value="0.6"/>
        <Setter Property="VerticalOptions" Value="FillAndExpand" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
      </Style>

      <utils:InverseBoolConverter x:Key="inverseBoolConverter" />
      <utils:ObjectToBoolConverter x:Key="objectBoolConverter"/>
      <utils:IdentifierMaker x:Key="identityConverter"/>     
      <DataTemplate x:Name="ItemTemplate"  x:Key="ItemTemplate">

        <ViewCell>
          <ViewCell.View>

            <Grid Padding="5,5,5,5" RowSpacing="0" ColumnSpacing="0">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="1" />
              </Grid.RowDefinitions>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="48" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Image x:Name="Icon"
                    Source="{Binding Icon}"
                    Grid.RowSpan="2"
                    HeightRequest="32"
                    WidthRequest="32"
                    VerticalOptions="Center"
                    HorizontalOptions="Center"/>
 
                <Label x:Name="DisplayName"
                        Text="{Binding DisplayName}"
                        Style="{StaticResource nesterFieldLabel}"
                        Grid.ColumnSpan="2"
                        Grid.Column="1"
                        HorizontalOptions="FillAndExpand" />
                <Label x:Name="Email"
                        Text="{Binding Email, Mode=TwoWay}"
                        Style="{StaticResource nesterListInfoLabelMinor}"
                        Grid.Row="1"
                        Grid.Column="1"
                          />

                <!--<Grid Grid.RowSpan="2"
                      Grid.Column="2"
                      HorizontalOptions="End"
                    >
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <Label 
                    Grid.Row="0"
                    Grid.Column="0"                    
                    Style="{StaticResource nesterInfoLabelMinor}" VerticalOptions="CenterAndExpand" Text="App" />

                  <StackLayout
                        Grid.Row="0"
                        Grid.Column="1"
                        Orientation="Horizontal"
                        VerticalOptions="CenterAndExpand"
                        HorizontalOptions="Start">
                  </StackLayout>

                  <Label
                    Grid.Row="1"
                    Grid.Column="0"
                    Style="{StaticResource nesterInfoLabelMinor}" VerticalOptions="CenterAndExpand" Text="Nests" />
                  
                  <StackLayout
                        Grid.Row="1"
                        Grid.Column="1"
                        Orientation="Horizontal"
                        VerticalOptions="CenterAndExpand"
                        HorizontalOptions="Start">
                  </StackLayout>
                  
                </Grid>-->

              </Grid>

              <Frame Grid.Row="1" OutlineColor="#E4E4E4" HasShadow="True" HeightRequest="1"/>
            </Grid>

          </ViewCell.View>
        </ViewCell>
            
      </DataTemplate>
    </ResourceDictionary>  
  </ContentPage.Resources>
  
  <Grid>

    <Grid.RowDefinitions>
      <RowDefinition Height="5*"/>
      <RowDefinition Height="35*"/>
      <RowDefinition Height="40*"/>
      <RowDefinition Height="20"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="5*"/>
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="30*"/>
      <ColumnDefinition Width="80*"/>
      <ColumnDefinition Width="20*"/>
    </Grid.ColumnDefinitions>

    <StackLayout Grid.Row="0" Grid.Column="1" Opacity="{Binding WizardMode, Converter={StaticResource inverseBoolConverter}}"
        Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Start">

      <Button x:Name="ButtonHome"
        Text="Home"
        Style="{StaticResource buttonUtilStyle1}"
        Clicked="OnDoneButtonClickedAsync">
      </Button>

      <Button x:Name="ButtonBasicDetails"
        Text="Basic"
        Style="{StaticResource buttonUtilStyle1}"
        Clicked="OnButtonBasicDetailsClickedAsync">
      </Button>

      <Button x:Name="ButtonNests"
        IsVisible="{Binding EditApp.OwnerCapabilities.CanViewNest}"
        Text="Nests"
        Style="{StaticResource buttonUtilStyle1}"
        Clicked="OnButtonNestsClickedAsync">
      </Button>

      <Button x:Name="ButtonDomains"
        Text="Domains"
        Style="{StaticResource buttonUtilStyle1}"
        Clicked="OnButtonDomainsClickedAsync">
      </Button>

    </StackLayout>

    <StackLayout Grid.Row="1" Grid.Column="1">
        
      <Label Style="{StaticResource nesterFieldLabel}" 
              Text="New Contact Email"></Label>

      <StackLayout>
        <Entry Style="{StaticResource nesterField}"
            x:Name="NewContactEmail"
            Text="{Binding Path=EditContact.Email, Mode=TwoWay}"
            Keyboard="Email"
            Placeholder="Enter email address">
          <Entry.Behaviors>
            <validators:EntryValidatorBehavior
                IsCheckEmpty="True"
                IsCheckEmail="True"
                MinLength="0"
                MaxLength="255"
                x:Name="EmailValidator"
                PropertyChanged="OnFieldValidation" />
          </Entry.Behaviors>
        </Entry>
        <Label Style="{StaticResource validateFailMsg}"
                Text="{Binding Source={x:Reference EmailValidator}, Path=Message}"
                Opacity="{Binding Source={x:Reference EmailValidator}, Path=IsVisibleMessage}" />
      </StackLayout>

      <StackLayout Orientation="Horizontal" Padding="0,10,0,10">
        <StackLayout Orientation="Horizontal" HorizontalOptions="Start" VerticalOptions="Center">

          <Button x:Name="ButtonClear"
            Text="Clear"
            Style="{StaticResource buttonUtilStyle1}"
            Clicked="OnClearButtonClicked">
          </Button>

          <Button x:Name="ButtonAdd"
            Text="Add"
            IsEnabled="{Binding Validated, Mode=TwoWay}"
            Style="{StaticResource buttonUtilStyle1}"
            Clicked="OnAddButtonClickedAsync">
          </Button>

          <!--<Button x:Name="ButtonRefresh"
            Text="Refresh"
            IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
            Style="{StaticResource buttonUtilStyle1}"
            Clicked="OnRefreshButtonClickedAsync">
          </Button>-->

          <Button x:Name="ButtonUpdate"
            Text="Update"
            IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
            Style="{StaticResource buttonUtilStyle1}"
            Clicked="OnUpdateButtonClickedAsync">
          </Button>

          <Button x:Name="ButtonRemove"
            Text="Remove"
            IsEnabled="{Binding Source={x:Reference AppContactsList},
                        Path=SelectedItem,
                        Converter={StaticResource objectBoolConverter}}"
            Style="{StaticResource buttonUtilStyle1}"
            Clicked="OnRemoveButtonClickedAsync">
          </Button>

        </StackLayout>
        <StackLayout HorizontalOptions="CenterAndExpand"></StackLayout>
        <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Center">

          <Grid Padding="0" ColumnSpacing="0" RowSpacing="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="22" />
              <RowDefinition Height="22" />
              <RowDefinition Height="22" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="5*" />                
              <ColumnDefinition Width="25*" />
              <ColumnDefinition Width="15*" />
              <ColumnDefinition Width="15*" />
              <ColumnDefinition Width="15*" />
              <ColumnDefinition Width="15*" />
            </Grid.ColumnDefinitions>

            <Label
              Grid.Row="0"
              Grid.Column="1"
              HorizontalOptions="FillAndExpand"
              VerticalOptions="FillAndExpand"
              FontSize="12"
              Style="{StaticResource nesterInfoLabelMinor}" TextColor="{StaticResource mainColor}" Text="Permissions" />

            <Label
              Grid.Row="1"
              Grid.Column="1"                
              Text="App"
              Style="{StaticResource PermClassLabel}">
            </Label>

            <Label
              Grid.Row="2"
              Grid.Column="1"                
              Text="Nests"
              Style="{StaticResource PermClassLabel}">
            </Label>
              
            <Label
              Grid.Row="0"
              Grid.Column="2"
              Text="Create"
              Style="{StaticResource PermAttrLabel}">
            </Label>
              
            <Label
              Grid.Row="0"
              Grid.Column="3"
              Text="View" 
              Style="{StaticResource PermAttrLabel}">
            </Label>

            <Label
              Grid.Row="0"
              Grid.Column="4"
              Text="Update"
              Style="{StaticResource PermAttrLabel}">
            </Label>

            <Label
              Grid.Row="0"
              Grid.Column="5"
              Text="Delete"
              Style="{StaticResource PermAttrLabel}">
            </Label>
 
            <StackLayout Grid.Row="1" 
                          Grid.Column="3"
                          Style="{StaticResource PermHolder}">                           
              <Switch x:Name ="SwitchCanViewApp" IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
                    IsToggled="{Binding EditContact.OwnerCapabilities.CanViewApp, Mode=TwoWay}"
                    Style="{StaticResource PermSwitch}" />
            </StackLayout>
              
            <StackLayout Grid.Row="1" 
                          Grid.Column="4"
                          Style="{StaticResource PermHolder}">                           
              <Switch x:Name ="SwitchCanUpdateApp" IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
                    IsToggled="{Binding EditContact.OwnerCapabilities.CanUpdateApp, Mode=TwoWay}" 
                    Style="{StaticResource PermSwitch}" />
            </StackLayout>
              
            <StackLayout Grid.Row="1" 
                          Grid.Column="5"
                          Style="{StaticResource PermHolder}">                           
              <Switch x:Name ="SwitchCanDeleteApp" IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
                    IsToggled="{Binding EditContact.OwnerCapabilities.CanDeleteApp, Mode=TwoWay}" 
                    Style="{StaticResource PermSwitch}" />
            </StackLayout>

            <StackLayout Grid.Row="2" 
                          Grid.Column="2" 
                          Style="{StaticResource PermHolder}">                           
              <Switch x:Name ="SwitchCanCreateNest" IsEnabled="{Binding CanUpdate, Mode=TwoWay}" 
                      IsToggled="{Binding EditContact.OwnerCapabilities.CanCreateNest, Mode=TwoWay}" 
                    Style="{StaticResource PermSwitch}" />
            </StackLayout>
                
            <StackLayout Grid.Row="2" 
                          Grid.Column="3"
                          Style="{StaticResource PermHolder}">                           
              <Switch x:Name ="SwitchCanViewNest" IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
                    IsToggled="{Binding EditContact.OwnerCapabilities.CanViewNest, Mode=TwoWay}" 
                    Style="{StaticResource PermSwitch}" />
            </StackLayout>
                
            <StackLayout Grid.Row="2" 
                          Grid.Column="4"
                          Style="{StaticResource PermHolder}">                           
              <Switch x:Name ="SwitchCanUpdateNest" IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
                    IsToggled="{Binding EditContact.OwnerCapabilities.CanUpdateNest, Mode=TwoWay}"
                    Style="{StaticResource PermSwitch}" />
            </StackLayout>
                
            <StackLayout Grid.Row="2" 
                          Grid.Column="5"
                          Style="{StaticResource PermHolder}">                           
              <Switch x:Name ="SwitchCanDeleteNest" IsEnabled="{Binding CanUpdate, Mode=TwoWay}"
                    IsToggled="{Binding EditContact.OwnerCapabilities.CanDeleteNest, Mode=TwoWay}" 
                    Style="{StaticResource PermSwitch}" />
              </StackLayout>                
          </Grid>

        </StackLayout>
      </StackLayout>

    </StackLayout>

    <StackLayout Grid.Row="2" Grid.Column="1">

      <sync:SfListView x:Name="AppContactsList"
                      ItemsSource="{Binding Contacts}"
                      SelectionGesture="Tap"
                      SelectionMode="Single"
                      SelectionBackgroundColor="{StaticResource selectionColor}"     
                      ItemTemplate="{StaticResource ItemTemplate}"
                      ItemSize="65"
                >
      </sync:SfListView>

    </StackLayout>
      
    <ActivityIndicator Grid.Row="3" Grid.Column="1" x:Name="ServiceActive" Style="{StaticResource nesterActive}">
    </ActivityIndicator>      
      
    <StackLayout Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
      <!--<Button x:Name="ButtonRefreshAll"
              Text="Refresh"
              Style="{StaticResource buttonPageFlow}"
              Clicked="OnRefreshAllButtonClickedAsync">
      </Button>-->        
      <Button x:Name="ButtonDone"
              Text="Proceed"
              IsVisible="{Binding WizardMode}" 
              Style="{StaticResource buttonPageFlow}"
              Clicked="OnDoneButtonClickedAsync">
      </Button>
    </StackLayout>

  </Grid>

</views:View>
